Index: src/apis/shop-api/index.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/apis/shop-api/index.ts	(date 1546739473000)
+++ src/apis/shop-api/index.ts	(date 1546739683000)
@@ -17,6 +17,10 @@
       }, 100);
     });
   }
+
+  async updateProduct(product: Product): Promise<void> {
+    await this.put(`products/${product.id}`, product);
+  }
 }
 
 const shopAPI: ShopAPI = new ShopAPIImpl();
Index: src/apis/types.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/apis/types.ts	(date 1546739473000)
+++ src/apis/types.ts	(date 1546739683000)
@@ -12,6 +12,8 @@
   getProducts(): Promise<Product[]>;
 
   buyProducts(products: Array<{ id: string; quantity: number }>): Promise<void>;
+
+  updateProduct(product: Product): Promise<void>;
 }
 
 //----------------------------------------------------------------------
Index: src/stores/product-store/index.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/stores/product-store/index.ts	(date 1546739473000)
+++ src/stores/product-store/index.ts	(date 1546739683000)
@@ -66,6 +66,14 @@
     this.f_state.all = products;
   }
 
+  async updateProduct(product: Product): Promise<void> {
+    const stateProduct = this.m_getStateProductById(product.id);
+    if (stateProduct) {
+      await this.$apis.shop.updateProduct(product);
+      this.$utils.assignIn(stateProduct, product);
+    }
+  }
+
   //----------------------------------------------------------------------
   //
   //  Internal methods
Index: src/stores/types.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/stores/types.ts	(date 1546739473000)
+++ src/stores/types.ts	(date 1546739683000)
@@ -20,6 +20,8 @@
   decrementProductInventory(productId: string): void;
 
   getAllProducts(): Promise<void>;
+
+  updateProduct(product: Product): Promise<void>;
 }
 
 export interface CartStore {
Index: src/views/product-admin-view/index.vue
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/views/product-admin-view/index.vue	(date 1546739473000)
+++ src/views/product-admin-view/index.vue	(date 1546739683000)
@@ -59,6 +59,10 @@
     }
   }
 }
+
+.update-button {
+  color: var(--app-link-color);
+}
 </style>
 
 <template>
@@ -124,6 +128,9 @@
             ></paper-input>
           </div>
         </div>
+      </div>
+      <div class="layout horizontal center end-justified">
+        <paper-button v-show="!!m_selectedProduct.id" class="update-button" @click="m_updateProduct"> {{ $t('update') }} </paper-button>
       </div>
     </div>
   </div>
@@ -169,6 +176,16 @@
 
   created() {}
 
+  //----------------------------------------------------------------------
+  //
+  //  Internal methods
+  //
+  //----------------------------------------------------------------------
+
+  async m_updateProduct(): Promise<void> {
+    await this.$stores.product.updateProduct(this.m_selectedProduct as Product);
+  }
+
   //----------------------------------------------------------------------
   //
   //  Event handlers
@@ -196,10 +213,12 @@
   title: "Title"
   price: "Price"
   stock: "Stock"
+  update: "Update"
 ja:
   products: "商品一覧"
   detail: "詳細"
   title: "タイトル"
   price: "価格"
   stock: "在庫"
+  update: "更新"
 </i18n>
